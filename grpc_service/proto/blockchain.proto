syntax = "proto3";
package blockchain;


service Blockchain {
  rpc Balance(BalanceReq) returns (BalanceRes) {}
  rpc Info (InfoReq) returns (InfoRes) {}
  // rpc Initialize (InitializeReq) returns (InitializeRes) {}
  // rpc Mint (MintReq) returns (MintRes) {}
  // rpc MintNft (MintNftReq) returns (MintNftRes) {}
  // rpc UpdateNft (UpdateNftReq) returns (UpdateNftRes) {}
  // rpc Transfer (TransferReq) returns (TransferRes) {}
  rpc CreateWallet (CreateWalletReq) returns (CreateWalletRes) {}
  // rpc WithdrawLamports (WithdrawLamportsReq) returns (WithdrawLamportsRes) {}
  // rpc WithdrawFt (WithdrawFtReq) returns (WithdrawFtRes) {}
  // rpc WithdrawNft (WithdrawNftReq) returns (WithdrawNftRes) {}
  // rpc StakingInitialize (StakingInitializeReq) returns (StakingInitializeRes) {}
  // rpc StakingAddRewardTokens (StakingAddRewardTokensReq) returns (StakingAddRewardTokensRes) {}
}

message BalanceReq {
  string url = 1;
  string mint_address = 2;
  string account = 3;
  
}

message BalanceRes {
  double balance = 1;
}

message InfoReq {
  string url = 1;
  string mint_address = 2;
  
}

message InfoRes {
  string info = 1;
}

// message InitializeReq {
// }

// message InitializeRes {
// }

// message MintReq {
// }

// message MintRes {
// }

// message MintNftReq {
// }

// message MintNftRes {
// }

// message UpdateNftReq {
// }

// message UpdateNftRes {
// }

// message TransferReq {
// }

// message TransferRes {
// }

message CreateWalletReq {
  string url = 1;
  string account = 2;
  string payer = 3;
  string primary_wallet = 4;
  string program_id = 5;
}

message CreateWalletRes {
    string wallet = 1;
    string signature = 2;
}

// message WithdrawLamportsReq {
// }

// message WithdrawLamportsRes {
// }

// message WithdrawFtReq {
// }

// message WithdrawFtRes {
// }

// message WithdrawNftReq {
// }

// message WithdrawNftRes {
// }

// message StakingInitializeReq {
// }

// message StakingInitializeRes {
// }

// message StakingAddRewardTokensReq {
// }

// message StakingAddRewardTokensRes {
// }

